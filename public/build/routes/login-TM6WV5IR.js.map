{
  "version": 3,
  "sources": ["../../../src/app/routes/login.tsx", "../../../src/app/ui/login/login.view.tsx"],
  "sourcesContent": ["import type { LoaderFunction, ActionFunction } from \"@remix-run/node\";\nimport { json, redirect } from \"@remix-run/node\";\nimport { useLoaderData } from \"@remix-run/react\";\nimport { User } from \"@domain/user\";\nimport { getUsers } from \"@infrastructure/db/user\";\nimport { getUserSession } from \"@app/session-storage\";\nimport { LoginView } from \"@app/ui/login\";\n\ntype LoaderData = {\n  users: User[];\n};\n\nexport const loader: LoaderFunction = async () => {\n  const users = await getUsers();\n  return json<LoaderData>({ users });\n};\n\nexport const action: ActionFunction = async ({ request }) => {\n  const formData = await request.formData();\n  const _action = formData.get(\"_action\") as string;\n\n  if (_action === \"setUser\") {\n    const userId = formData.get(\"user\") as string;\n    const userSession = await getUserSession(request);\n    userSession.setUser(userId);\n\n    return redirect(\"/projects\", {\n      headers: { \"Set-Cookie\": await userSession.commit() },\n    });\n  }\n  console.error(\"Unknown action\", _action);\n};\n\nexport default function LoginRoute() {\n  const { users } = useLoaderData<LoaderData>();\n  return <LoginView users={users} />;\n}\n", "import { useState } from \"react\";\nimport { Form } from \"@remix-run/react\";\nimport * as Select from \"@radix-ui/react-select\";\nimport { User, UserId, userMock1 } from \"@domain/user\";\nimport { UserAvatar } from \"@app/components/user-avatar\";\nimport logo from './logomain.png'\nimport {\n  SelectContent,\n  SelectTrigger,\n  SelectTriggerIcon,\n  SelectItem,\n  SelectItemIndicator,\n} from \"@app/components/select\";\n\nexport const LoginView = ({ users }: Props) => {\n  const [selectedValue, setSelectedValue] = useState<User>(userMock1);\n\n  const onValueChange = (userId: UserId) => {\n    const foundUser = users.find((user) => user.id === userId);\n\n    if (foundUser) {\n      setSelectedValue(foundUser);\n    }\n  };\n\n  return (\n    <div className=\"mx-auto max-w-[800px] pt-[20vh]\" style={{backgroundColor:'#2D4059',position:'relative', padding:'250px',borderRadius:'10px',top:'0px',left:'0',right:'0',left:'0',margin:'auto',height:'100vh'}}>\n      <img src={logo}></img>\n      <h1 style={{fontSize:'20px', color:'#ffd460'}}>Login to swiftScrum</h1>\n      <h2 style={{fontSize:'20px', color:'white'}} className=\"mt-3 mb-8 font-primary-light text-lg text-font-dark dark:text-font-light-dark\">\n        Users have been added by your organization . Contact your admin to add new users. \n      </h2>\n      <Form  method=\"post\" className=\"mx-auto w-[300px]\">\n        <Select.Root \n          name=\"user\"\n          defaultValue={userMock1.id}\n          onValueChange={onValueChange}\n        >\n          <SelectTrigger style={{backgroundColor:'#ffd460',borderRadius:'30px'}}\n            className=\"flex w-full justify-between\"\n            aria-label=\"Open user select\"\n          >\n            <div className=\"flex items-center gap-2\">\n              <UserAvatar {...selectedValue} />\n              <Select.Value />\n            </div>\n            <SelectTriggerIcon />\n          </SelectTrigger>\n          <SelectContent>\n            <Select.ScrollUpButton />\n            <Select.Viewport>\n              {users.map((user, index) => (\n                <SelectItem key={index} value={user.id}>\n                  <SelectItemIndicator />\n                  <UserAvatar {...user} />\n                  <Select.ItemText>{user.name}</Select.ItemText>\n                </SelectItem>\n              ))}\n              <Select.Separator />\n            </Select.Viewport>\n            <Select.ScrollDownButton />\n          </SelectContent>\n        </Select.Root>\n        <button style={{width:'100px', backgroundColor:'#FFD460', marginTop:'10px', height:'30px', borderRadius:'20px'} }\n          type=\"submit\"\n          name=\"_action\"\n          value=\"setUser\"\n          aria-label=\"Login\"\n        >\n          Login\n        </button>\n        <button style={{width:'150px', backgroundColor:'#FFD460', marginTop:'10px',marginLeft:'10px', height:'30px', borderRadius:'20px'} }\n         \n        >\n          Contact Admin\n        </button>\n      </Form>\n    </div>\n  );\n};\n\ninterface Props {\n  users: User[];\n}\n"],
  "mappings": "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",
  "names": ["import_jsx_dev_runtime"]
}
