{
  "version": 3,
  "sources": ["../../../../src/app/routes/__main/projects.$projectId.tsx", "../../../../src/app/ui/main/project/project.view.tsx"],
  "sourcesContent": ["import type { LoaderFunction, V2_MetaFunction } from \"@remix-run/node\";\nimport { json, redirect } from \"@remix-run/node\";\nimport { useLoaderData } from \"@remix-run/react\";\nimport invariant from \"tiny-invariant\";\nimport { ProjectSummary, ProjectId } from \"@domain/project\";\nimport { getProjectSummary } from \"@infrastructure/db/project\";\nimport { Error404 } from \"@app/components/error-404\";\nimport { Error500 } from \"@app/components/error-500\";\nimport { ProjectView } from \"@app/ui/main/project\";\nimport { formatTags, formatProperties } from \"@utils/meta\";\n\nexport const meta: V2_MetaFunction<typeof loader> = ({ data }) => {\n  const { projectSummary } = data as LoaderData;\n  const title = `Swift Scrum - ${projectSummary.name || \"Project\"}`;\n  const description =\n    \"See all your projects in one place. Create new ones and assigne team members.\";\n  const image = \"https://jira-clone.fly.dev/static/images/readme/project.png\";\n  const url = `https://jira-clone.fly.dev/projects/${projectSummary.id}`;\n\n  const tags = {\n    charset: \"utf-8\",\n    viewport: \"width=device-width,initial-scale=1\",\n    title: title,\n    description: description,\n    \"twitter:card\": \"summary_large_image\",\n    \"twitter:site\": url,\n    \"twitter:domain\": \"jira-clone.fly.dev\",\n    \"twitter:title\": title,\n    \"twitter:description\": description,\n    \"twitter:image\": image,\n    \"twitter:image:width\": \"1457\",\n    \"twitter:image:height\": \"872\",\n    \"twitter:image:alt\": title,\n    \"twitter:creator\": \"@Jack_DanielSG\",\n    \"twitter:creator:id\": \"Jack_DanielSG\",\n  };\n\n  const properties = {\n    \"og:url\": url,\n    \"og:type\": \"website\",\n    \"og:site_name\": title,\n    \"og:title\": title,\n    \"og:description\": description,\n    \"og:image\": image,\n  };\n\n  return [...formatTags(tags), ...formatProperties(properties)];\n};\n\ntype LoaderData = {\n  projectSummary: ProjectSummary;\n};\n\nexport const loader: LoaderFunction = async ({ request, params }) => {\n  const url = new URL(request.url);\n  const projectId = params.projectId as ProjectId;\n\n  invariant(params.projectId, `params.projectId is required`);\n\n  const projectSummary = await getProjectSummary(projectId);\n\n  if (!projectSummary) {\n    throw new Response(\"Not Found\", {\n      status: 404,\n    });\n  }\n\n  if (url.pathname === `/projects/${projectId}`) {\n    return redirect(`/projects/${projectId}/board`);\n  }\n\n  return json<LoaderData>({ projectSummary: projectSummary });\n};\n\nexport function ErrorBoundary({ error }: { error: Error }) {\n  console.error(error);\n  const errorMessage = \"The Project page failed. Navigate to the projects page\";\n\n  return (\n    <div className=\"flex h-full items-center justify-center\">\n      <Error500 message={errorMessage} href=\"/projects\" />\n    </div>\n  );\n}\n\nexport function CatchBoundary() {\n  const errorMessage = \"Project not found. Navigate to the projects page\";\n  return (\n    <div className=\"flex h-full items-center justify-center\">\n      <Error404 message={errorMessage} href=\"/projects\" />\n    </div>\n  );\n}\n\nexport default function ProjectRoute() {\n  const { projectSummary } = useLoaderData() as LoaderData;\n  const { name, description, image } = projectSummary;\n  return <ProjectView name={name} description={description} image={image} />;\n}\n", "  import { Outlet, Link, useLocation } from \"@remix-run/react\";\n  import { Sidebar } from \"@app/ui/main/project/sidebar\";\n\n  const sectionTitles: Record<string, string> = {\n    board: \"Board\",\n    analytics: \"Analytics\",\n    backlog: \"Backlog\",\n  };\n  const defaultSection = \"board\";\n\n  export const ProjectView = ({\n    name,\n    description,\n    image,\n  }: Props): JSX.Element => {\n    const location = useLocation();\n    const section = location.pathname.split(\"/\").slice(-1)[0];\n\n    const sectionTitle = sectionTitles[section] || sectionTitles[defaultSection];\n\n    return (\n      <div  style={{backgroundColor:'#425B7D'}} className=\"relative flex h-full flex-grow\">\n      \n        <div className=\"z-10 flex h-full w-full flex-grow flex-col py-6 px-5\">\n          <section style={{color:'#ffd460',padding:'10px', width:'600px', borderRadius:'10px'}}>\n            <Link to=\"/projects\" className=\"underline underline-offset-[3px]\">\n              open\n            </Link>\n            <span className=\"mx-2\">/</span>\n            <span>{name}</span>\n            <h1 className=\"mt-4 mb-5 font-primary-black text-3xl\">\n              {sectionTitle}\n            </h1>\n          </section>\n          <Outlet />\n        </div>\n      </div>\n    );\n  };\n\n  interface Props {\n    name: string;\n    description?: string;\n    image: string;\n  }\n"],
  "mappings": "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",
  "names": ["import_jsx_dev_runtime"]
}
